// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: deep-green; icon-glyph: mosque;
function e(e){const t=e||new Date;return new Date(t).toLocaleString(void 0,{day:"2-digit",month:"2-digit",year:"numeric"}).replace(/\//g,"-")}async function t(e,t,r,i,n){try{const s=function(e,t){if(!t)return e;let a=e.includes("?");for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)){const i=t[r];null!=i&&(e+=(a?"&":"?")+encodeURIComponent(r)+"="+encodeURIComponent(i.toString()),a=!0)}return e}(e,i),o=new Request(s);n&&Object.assign(o,n);const c=await t(o),l=o.response.statusCode,d=a(l)||function(e){return e>=300&&e<=399}(l)||a(l)||function(e){return e>=500&&e<=599}(l);if(d&&r(c),function(e){return e>=200&&e<300}(l))return c}catch(e){throw e instanceof Error?new Error(e.message):new Error(String(e))}}function a(e){return e>=400&&e<=499}class r{constructor(e){this.baseUrl="http://api.aladhan.com/v1/timings",this.parameters=e}async getPrayerTimes(a){try{const r=e(a),i=`${this.baseUrl}/${r}`,n=await t(i,(async e=>await e.loadJSON()),(e=>{throw new Error(e.data)}),this.parameters);return n.data}catch(e){const t=e instanceof Error?e.message:String(e);throw new Error(`Failed to retrieve prayer times: ${t}`)}}}function i(e,t){for(const a in t){const r=e[a],n=t[a];Array.isArray(r)&&Array.isArray(n)?e[a]=n:e[a]="object"==typeof r&&"object"==typeof n?i(Object.assign({},r),n):n}return e}class n{constructor(e){this.online=!1,this.widgetSize=function(e="small"){return config.widgetFamily?config.widgetFamily:e}("medium"),this.displayItems=this.getDisplayItems(this.widgetSize),this.offlineDataDistanceMetres=0,this.preferences=function(e,t,a){const r="function"==typeof t?t(e):t,n=i(Object.assign({},e),r);return a?i(n,a):n}({user:{offlineDays:5,distanceToleranceMetres:1e3,displayPrayerTimes:[{name:"fajr",display:"🌄",abbreviation:"FAJ"},{name:"sunrise",display:"🌅",abbreviation:"SUR"},{name:"dhuhr",display:"🕛",abbreviation:"DHU"},{name:"asr",display:"🌞",abbreviation:"ASR"},{name:"sunset",display:"🌇",abbreviation:"SUS"},{name:"maghrib",display:"🌆",abbreviation:"MAG"},{name:"isha",display:"🌙",abbreviation:"ISH"},{name:"imsak",display:"⭐",abbreviation:"IMS"},{name:"midnight",display:"🕛",abbreviation:"MID"},{name:"firstthird",display:"🌌",abbreviation:"FTH"},{name:"lastthird",display:"🌒",abbreviation:"LTH"}],aladhan:{method:15}},data:{location:void 0,prayerTimes:void 0}},e,{user:{displayPrayerTimes:[{name:"fajr",display:"🌄",abbreviation:"FAJ"},{name:"dhuhr",display:"🕛",abbreviation:"DHU"},{name:"asr",display:"🌞",abbreviation:"ASR"},{name:"maghrib",display:"🌆",abbreviation:"MAG"},{name:"isha",display:"🌙",abbreviation:"ISH"},{name:"imsak",display:"⭐",abbreviation:"IMS"}]},data:{}})}getDisplayItems(e){switch(e){case"small":case"medium":default:return 5;case"large":case"extraLarge":return 14;case"accessoryCircular":case"accessoryInline":case"accessoryRectangular":return 1}}stringToDate(e){const[t,a,r]=e.split("-"),i=new Date(Number(r),Number(a)-1,Number(t));return i.setHours(0,0,0,0),i}calculateDistance(e,t){const a=e=>e*(Math.PI/180),r=a(t.latitude-e.latitude),i=a(t.longitude-e.longitude),n=Math.sin(r/2)*Math.sin(r/2)+Math.cos(a(e.latitude))*Math.cos(a(t.latitude))*Math.sin(i/2)*Math.sin(i/2);return 1e3*(6371*(2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n))))}roundToTwoDecimals(e){return Math.round(100*(e+Number.EPSILON))/100}convertToLocaleAmPm(e,t={hour:"numeric",minute:"numeric",hour12:!0}){return e.toLocaleTimeString(void 0,t).toUpperCase()}getDaysBetweenDates(e,t){const a=new Date(e),r=(new Date(t).getTime()-a.getTime())/864e5;return Math.abs(r)}}class s{constructor(){this.fileManager=FileManager.iCloud()||FileManager.local(),this.documentsDirectory=this.fileManager.documentsDirectory()}async readJSON(e){try{if(await this.ensureExists(e)){const t=this.fileManager.readString(e);return JSON.parse(t)}}catch(e){this.handleError(e)}}async saveJSON(e,t,a){try{const r=JSON.stringify(t,null,2);if(await this.createDirectoryFromFilePath(e),!a)return this.fileManager.writeString(e,r),r;const i=this.fileManager.fileName(e),n=this.fileManager.fileExtension(e),s=a(i)+n,o=e.replace(n,s);return this.fileManager.writeString(o,r),r}catch(e){throw this.handleError(e)}}joinDocumentPaths(e,t){let a;if(a="string"==typeof e?this.fileManager.joinPath(this.documentsDirectory,e):e.reduce(((e,t)=>this.fileManager.joinPath(e,t)),this.documentsDirectory),t){a+=t.startsWith(".")?t:`.${t}`}return a}async createDirectoryFromFilePath(e,t=!0){if(await this.ensureExists(e))return e;const a=this.fileManager.fileName(e,!0),r=e.replace(a,"").replace(this.documentsDirectory,"");return await this.createDirectory(r,t),e}async createDirectory(e,t){try{const a=this.fileManager.joinPath(this.documentsDirectory,e);return await this.ensureExists(a)||this.fileManager.createDirectory(a,t),a}catch(e){throw this.handleError(e)}}async ensureExists(e){if(!this.fileManager.fileExists(e))return!1;if(this.fileManager.isFileDownloaded(e)||await this.fileManager.downloadFileFromiCloud(e),this.fileManager.isFileDownloaded(e))return!0;throw new Error("Unable to download file.")}handleError(e){return e instanceof Error?new Error(e.message):new Error(String(e))}}class o extends n{constructor(e){super(e),this.fileManager=new s,this.filePath=this.fileManager.joinDocumentPaths([Script.name(),Script.name()],".json")}async savePreferences(e){await this.fileManager.saveJSON(this.filePath,e)}async mergeAndSavePreferences(e){const t=i(this.preferences,e);await this.savePreferences(t)}async loadPreferences(){return await this.fileManager.readJSON(this.filePath)}}function c(e){return console.error(e),e instanceof Error?Error(e.message):Error(String(e))}class l extends o{constructor(e){super(e)}async isOnline(){const e=new Request("https://www.google.com");e.method="HEAD",e.timeoutInterval=.25;try{const t=await e.load();return console.log(t),!!t}catch(e){return!1}}async fetchPrayerTimes(e,t,a){try{const{latitude:i,longitude:n}=t,s=[],o=new r({latitude:i,longitude:n,method:e});for(let e=0;e<a;e++){const t=new Date;t.setDate(t.getDate()+e);const a=await o.getPrayerTimes(t);s.push(a)}return this.mergeAndSortPrayerTimes(s,this.preferences.data.prayerTimes,a)}catch(e){throw c(e)}}mergeAndSortPrayerTimes(e,t,a){const r=[];if(t){const i=this.removeDuplicates(t),n=this.filterPrayerTimesByDateRange(i,a),s=this.mergeAndReplacePrayerTimes(n,e),o=this.sortPrayerTimesByDate(s);r.push(...o)}return r}filterPrayerTimesByDateRange(e,t){return e.filter((e=>{const a=new Date;a.setHours(0,0,0,0);const r=new Date(a);r.setDate(a.getDate()+t);const i=new Date(e.date.gregorian.date);return i>=a&&i<=r}))}mergeAndReplacePrayerTimes(e,t){const a=[...e];return t.forEach((e=>{if(!a.some((t=>JSON.stringify(t)===JSON.stringify(e)))){const t=a.findIndex((({date:{gregorian:{date:t}}})=>e.date.gregorian.date===t));t>=0?a[t]=e:a.push(e)}})),a}sortPrayerTimesByDate(e){return[...e].sort(((e,t)=>new Date(e.date.gregorian.date).getTime()-new Date(t.date.gregorian.date).getTime()))}removeDuplicates(e){const t=[];return e.forEach((e=>{t.some((t=>JSON.stringify(t)===JSON.stringify(e)))||t.push(e)})),t}}class d extends l{constructor(e){super(e)}getPrayerTimes(e,t,a){const r=new Date,i=t.map((e=>e.name.toUpperCase()));let n=e.map((e=>this.convertTimingsToDateArray(e))).flat().filter((e=>i.includes(e.prayer.toUpperCase()))).filter((e=>e.dateTime>r)).sort(((e,t)=>e.dateTime.getTime()-t.dateTime.getTime()));return a&&(n=n.slice(0,a)),n}convertTimingsToDateArray(e){const{timings:t,date:{gregorian:a}}=e,r=a.date.split("-"),i=`${r[2]}-${r[1]}-${r[0]}`;return Object.entries(t).map((([e,t])=>{const a=t.split(":");return{prayer:e,dateTime:new Date(`${i}T${a[0]}:${a[1]}:00`)}}))}getDay(e,t){if(!e)return;const a=e.filter((({date:{gregorian:{date:e}}})=>{const a=t||new Date;a.setHours(0,0,0,0);const r=this.stringToDate(e);return a.toDateString()===r.toDateString()}));if(a[0]){return a[0]}}addStatusToPrayerTimes(e){const t=new Date,a=new Date(new Date(t).setHours(0,0,0,0)),r=new Date(a.getTime()+864e5-1),i=e.findIndex((e=>e.dateTime>t));return e.map(((e,a)=>{let n="unknown",s=!1;return n=e.dateTime<t?"past":e.dateTime>t&&e.dateTime<=r?"today":"future",a===i&&(s=!0),{prayer:e.prayer,dateTime:e.dateTime,status:{state:n,next:s}}}))}}class m extends d{constructor(e){super(e)}createWidget(t,a,r,i,n){const s=this.getPrayerTimes(t,a,r),o=this.addStatusToPrayerTimes(s),c=new Date,l="#FFFFFF",d=new ListWidget;"accessoryCircular"!==i&&(d.setPadding(16,20,16,20),d.spacing=4);const m=d.addStack();switch(m.layoutVertically(),m.centerAlignContent(),m.spacing=4,o.forEach((e=>{const{prayer:t,dateTime:r}=e,n=this.getDaysBetweenDates(c,r)+1,s=new Color(l,.8/n),o=a.find((e=>e.name.toLowerCase()===t.toLowerCase()));if(!o)return;const{name:d,abbreviation:u}=o,h="medium"===i||"large"===i?d.toUpperCase():u;switch(i){case"small":case"medium":case"large":case"extraLarge":this.addTimeStackInWidget(m,h,e,4,s);break;case"accessoryCircular":this.addTimeStackInAccessoryCircular(m,h,e,s);break;case"accessoryInline":case"accessoryRectangular":this.addTimeStackInAccessoryInlineRectangle(m,h,e,s)}})),i){case"small":case"medium":case"large":case"extraLarge":const t=d.addStack();t.layoutVertically();const a=this.addCenteredTextElementToStack(t,`${n} metres`);a.font=new Font("AvenirNext-Regular",10),a.textColor=new Color(l,.8);const r=this.addCenteredTextElementToStack(t,`${e(c)} ${this.convertToLocaleAmPm(c)}`);r.font=new Font("AvenirNext-Regular",10),r.textColor=new Color(l,.8)}return d}addTimeStackInAccessoryInlineRectangle(e,t,a,r){const{dateTime:i,status:n}=a;let s,o=new Font("AvenirNext-Regular",12);n&&"future"===n.state&&(s=r),n&&n.next&&(o=new Font("AvenirNext-Bold",14));const c=e.addStack(),l=c.addText(t);l.font=o,l.lineLimit=1;const d=c.addDate(i);return d.font=o,d.lineLimit=1,d.applyTimeStyle(),s&&(l.textColor=s,d.textColor=s),c}addTimeStackInAccessoryCircular(e,t,a,r){const{dateTime:i,status:n}=a;let s,o=new Font("AvenirNext-Regular",12);n&&"future"===n.state&&(s=r),n&&n.next&&(o=new Font("AvenirNext-Bold",14));const c=e.addStack();c.layoutVertically();const l=c.addStack();l.addSpacer();const d=l.addText(t);d.font=o,d.lineLimit=1,l.addSpacer();const m=c.addStack();m.addSpacer();const u=m.addDate(i);return u.font=o,u.lineLimit=1,u.minimumScaleFactor=.5,u.applyTimeStyle(),m.addSpacer(),s&&(d.textColor=s,u.textColor=s),c}addTimeStackInWidget(e,t,a,r,i){const{dateTime:n,status:s}=a;let o,c=new Font("AvenirNext-Regular",12);s&&"future"===s.state&&(o=i),s&&s.next&&(c=new Font("AvenirNext-Bold",14));const l=e.addStack();l.spacing=r;const d=l.addText(t);d.font=c,d.lineLimit=1,l.addSpacer();const m=l.addDate(n);return m.font=c,m.lineLimit=1,m.applyTimeStyle(),o&&(d.textColor=o,m.textColor=o),l}addCenteredTextElementToStack(e,t){const a=e.addStack();a.addSpacer();const r=a.addText(t);return r.lineLimit=1,a.addSpacer(),r}}class u extends m{constructor(e){super(e)}async initialise(){this.online=await this.isOnline();await this.loadPreferences()||this.initialiseWidgetPreferences(this.preferences),Location.current().then((async e=>{this.preferences.data.location=e,await this.mergeAndSavePreferences({data:{location:e}}),console.log(`Location updated: ${JSON.stringify(e)}`)}))}async setup(){await this.initialise();const e=new Date,{location:t,prayerTimes:a}=this.preferences.data;if(a){const r=this.getDay(a,e),i=this.getPrayerTimes(a,this.preferences.user.displayPrayerTimes).length;this.getCurrentDistanceFromOfflineAladhanPrayerTime(r),(i<=this.displayItems||this.offlineDataDistanceMetres>this.preferences.user.distanceToleranceMetres)&&await this.getSaveAladhanPrayerTime(t),this.preferences.data.prayerTimes&&this.displayPrayerTimes(this.preferences.data.prayerTimes)}else{if(!this.online)return console.error("Script requires an internet connection to fetch prayer times for the first time."),Script.complete();await this.getSaveAladhanPrayerTime(t)}}async displayPrayerTimes(e){const t=this.createWidget(e,this.preferences.user.displayPrayerTimes,this.displayItems,this.widgetSize,this.offlineDataDistanceMetres);config.runsInAccessoryWidget&&(t.addAccessoryWidgetBackground=!0,Script.setWidget(t)),await t.presentMedium(),Script.complete()}initialiseWidgetPreferences(e){this.savePreferences(e)}getCurrentDistanceFromOfflineAladhanPrayerTime(e){if(e&&this.preferences.data.location){const{meta:t}=e,a=this.calculateDistance(this.preferences.data.location,t);this.offlineDataDistanceMetres=this.roundToTwoDecimals(a)}}async getSaveAladhanPrayerTime(e){e&&(this.preferences.data.prayerTimes=await this.fetchPrayerTimes(this.preferences.user.aladhan.method,e,this.preferences.user.offlineDays),await this.savePreferences(this.preferences))}}(async()=>{await async function(){try{const e=new s,t=e.joinDocumentPaths([Script.name(),Script.name()],".json"),a=await e.readJSON(t),r=new u(a);await r.setup()}catch(e){throw c(e)}}()})();
