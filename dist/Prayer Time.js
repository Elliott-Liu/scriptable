// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: deep-green; icon-glyph: mosque;
function e(e){return console.error(e),e instanceof Error?Error(e.message):Error(String(e))}function t(e,a){for(const r in a){const i=e[r],n=a[r];Array.isArray(i)&&Array.isArray(n)?e[r]=n:e[r]="object"==typeof i&&"object"==typeof n?t(Object.assign({},i),n):n}return e}async function a(e,t,a,i,n){try{const s=function(e,t){if(!t)return e;let a=e.includes("?");for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)){const i=t[r];null!=i&&(e+=(a?"&":"?")+encodeURIComponent(r)+"="+encodeURIComponent(i),a=!0)}return e}(e,i),o=new Request(s);n&&Object.assign(o,n);const c=await t(o),l=o.response.statusCode,d=r(l)||function(e){return e>=300&&e<=399}(l)||r(l)||function(e){return e>=500&&e<=599}(l);if(d&&a(c),function(e){return e>=200&&e<300}(l))return c}catch(e){throw e instanceof Error?new Error(e.message):new Error(String(e))}}function r(e){return e>=400&&e<=499}class i{constructor(){this.fileManager=FileManager.iCloud()||FileManager.local(),this.documentsDirectory=this.fileManager.documentsDirectory()}async readJSON(e){try{if(await this.ensureExists(e)){const t=this.fileManager.readString(e),a=JSON.parse(t);if(void 0===a)return;return a}}catch(e){throw this.handleError(e)}}async saveJSON(e,t,a){try{const r=JSON.stringify(t,null,2);if(await this.createDirectoryFromFilePath(e),!a)return this.fileManager.writeString(e,r),r;const i=this.fileManager.fileName(e),n=this.fileManager.fileExtension(e),s=a(i)+n,o=e.replace(n,s);return this.fileManager.writeString(o,r),r}catch(e){throw this.handleError(e)}}joinDocumentPaths(e,t){let a;if(a="string"==typeof e?this.fileManager.joinPath(this.documentsDirectory,e):e.reduce(((e,t)=>this.fileManager.joinPath(e,t)),this.documentsDirectory),t){a+=t.startsWith(".")?t:`.${t}`}return a}async createDirectoryFromFilePath(e,t=!0){if(await this.ensureExists(e))return e;const a=this.fileManager.fileName(e,!0),r=e.replace(a,"").replace(this.documentsDirectory,"");return await this.createDirectory(r,t),e}async createDirectory(e,t){try{const a=this.fileManager.joinPath(this.documentsDirectory,e);if(await this.ensureExists(a)){if(this.fileManager.isDirectory(a))return a;throw new Error("A file with the same name already exists.")}return this.fileManager.createDirectory(a,t),a}catch(e){throw this.handleError(e)}}async ensureExists(e){if(!this.fileManager.fileExists(e))return!1;if(this.fileManager.isFileDownloaded(e)||await this.fileManager.downloadFileFromiCloud(e),this.fileManager.isFileDownloaded(e))return!0;throw new Error("Unable to download file.")}handleError(e){return e instanceof Error?new Error(e.message):new Error(String(e))}}class n{constructor(e){this.baseUrl="http://api.aladhan.com/v1/timings",this.parameters=e}async getPrayerTimes(e){try{const t=function(e){const t=e||new Date;return new Date(t).toLocaleString(void 0,{day:"2-digit",month:"2-digit",year:"numeric"}).replace(/\//g,"-")}(e),r=`${this.baseUrl}/${t}`,i=await a(r,(async e=>await e.loadJSON()),(e=>{throw new Error(e.data)}),this.parameters);return i.data}catch(e){const t=e instanceof Error?e.message:String(e);throw new Error(`Failed to retrieve prayer times: ${t}`)}}}class s{constructor(e){this.online=!1,this.widgetSize=function(e="small"){return config.widgetFamily?config.widgetFamily:e}("large"),this.displayItems=this.calculateDisplayItems(this.widgetSize),this.preferences=function(e,a,r){const i="function"==typeof a?a(e):a||{},n=t(Object.assign({},e),i);return r?t(n,r):n}({user:{offlineDays:5,distanceToleranceMetres:1e3,displayPrayerTimes:[{name:"fajr",display:"🌄",abbreviation:"FAJ"},{name:"sunrise",display:"🌅",abbreviation:"SUR"},{name:"dhuhr",display:"🕛",abbreviation:"DHU"},{name:"asr",display:"🌞",abbreviation:"ASR"},{name:"sunset",display:"🌇",abbreviation:"SUS"},{name:"maghrib",display:"🌆",abbreviation:"MAG"},{name:"isha",display:"🌙",abbreviation:"ISH"},{name:"imsak",display:"⭐",abbreviation:"IMS"},{name:"midnight",display:"🕛",abbreviation:"MID"},{name:"firstthird",display:"🌌",abbreviation:"FTH"},{name:"lastthird",display:"🌒",abbreviation:"LTH"}],aladhan:{method:15}},data:{location:void 0,prayerTimes:void 0}},e||{user:{displayPrayerTimes:[{name:"fajr",display:"🌄",abbreviation:"FAJ"},{name:"dhuhr",display:"🕛",abbreviation:"DHU"},{name:"asr",display:"🌞",abbreviation:"ASR"},{name:"maghrib",display:"🌆",abbreviation:"MAG"},{name:"isha",display:"🌙",abbreviation:"ISH"},{name:"imsak",display:"⭐",abbreviation:"IMS"}]},data:{}}),this.distanceFromOfflineData=this.preferences.user.distanceToleranceMetres}calculateDisplayItems(e){switch(e){case"small":case"medium":default:return 5;case"large":case"extraLarge":return 13;case"accessoryCircular":case"accessoryInline":case"accessoryRectangular":return 1}}parseDateString(e){const[t,a,r]=e.split("-"),i=new Date(Number(r),Number(a)-1,Number(t));return i.setHours(0,0,0,0),i}calculateDistance(e,t){const a=1e3*((e,t)=>{const a=e=>e*(Math.PI/180),r=a(t.latitude-e.latitude),i=a(t.longitude-e.longitude),n=Math.sin(r/2)*Math.sin(r/2)+Math.cos(a(e.latitude))*Math.cos(a(t.latitude))*Math.sin(i/2)*Math.sin(i/2);return 6371*(2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n)))})(e,t);return this.roundToTwoDecimals(a)}roundToTwoDecimals(e){return Math.round(100*(e+Number.EPSILON))/100}convertToLocaleAmPm(e,t={hour:"numeric",minute:"numeric",hour12:!0}){return e.toLocaleTimeString(void 0,t).toUpperCase()}calculateDaysDifference(e,t){const a=new Date(e),r=(new Date(t).getTime()-a.getTime())/864e5;return Math.abs(r)}}class o extends s{constructor(e){super(e),this.fileManager=new i,this.filePath=this.fileManager.joinDocumentPaths([Script.name(),Script.name()],".json")}async savePreferences(e){this.preferences=e,await this.fileManager.saveJSON(this.filePath,e)}async mergeAndSavePreferences(e){const a=t(this.preferences,e);await this.savePreferences(a)}async loadPreferences(){try{const e=await this.fileManager.readJSON(this.filePath);return e||await this.savePreferences(this.preferences),e||this.preferences}catch(t){throw e(t)}}}class c extends o{constructor(e){super(e)}async isOnline(e=15){const t=new Request("https://www.google.com");t.method="HEAD",t.timeoutInterval=e/1e3;try{return!!await t.load()}catch(e){return!1}}async fetchPrayerTimes(t){try{const{latitude:e,longitude:a}=t,r=[],i=new n({latitude:e,longitude:a,method:this.preferences.user.aladhan.method});for(let e=0;e<this.preferences.user.offlineDays;e++){const t=new Date;t.setDate(t.getDate()+e);const a=await i.getPrayerTimes(t);r.push(a)}return this.mergeAndSortPrayerTimes(r,this.preferences.data.prayerTimes,this.preferences.user.offlineDays)}catch(t){throw e(t)}}mergeAndSortPrayerTimes(e,t,a){const r=[];if(t){const i=this.removeDuplicates(t),n=this.filterPrayerTimesByDateRange(i,a),s=this.mergeAndReplacePrayerTimes(n,e),o=this.sortPrayerTimesByDate(s);r.push(...o)}return r}filterPrayerTimesByDateRange(e,t){return e.filter((e=>{const a=new Date;a.setHours(0,0,0,0);const r=new Date(a);r.setDate(a.getDate()+t);const i=new Date(e.date.gregorian.date);return i>=a&&i<=r}))}mergeAndReplacePrayerTimes(e,t){const a=[...e];return t.forEach((e=>{if(!a.some((t=>JSON.stringify(t)===JSON.stringify(e)))){const t=a.findIndex((({date:{gregorian:{date:t}}})=>e.date.gregorian.date===t));t>=0?a[t]=e:a.push(e)}})),a}sortPrayerTimesByDate(e){return[...e].sort(((e,t)=>new Date(e.date.gregorian.date).getTime()-new Date(t.date.gregorian.date).getTime()))}removeDuplicates(e){const t=[];return e.forEach((e=>{t.some((t=>JSON.stringify(t)===JSON.stringify(e)))||t.push(e)})),t}}class l extends c{constructor(e){super(e)}async fetchAndSavePrayerTimes(e){if(!e)return console.error("Location not available. Please enable location services."),Script.complete();const t=await this.fetchPrayerTimes(e);await this.mergeAndSavePreferences({data:{prayerTimes:t}})}calculateDistanceFromDeviceLocation(e){return e&&this.preferences.data.location?this.calculateDistance(this.preferences.data.location,e):this.preferences.user.distanceToleranceMetres}getPrayerTimeForDay(e,t=new Date){if(!e)return;const a=e.filter((e=>{const a=t||new Date;a.setHours(0,0,0,0);const r=this.parseDateString(e.date.gregorian.date);return a.toDateString()===r.toDateString()}));if(a[0]){return a[0]}}getFilteredPrayerTimes(e,t){const a=new Date,r=this.preferences.user.displayPrayerTimes.map((e=>e.name.toUpperCase()));let i=e.map((e=>this.convertPrayerTimingsToDateArray(e))).flat().filter((e=>r.includes(e.prayer.toUpperCase()))).filter((e=>e.dateTime>a)).sort(((e,t)=>e.dateTime.getTime()-t.dateTime.getTime()));return t&&(i=i.slice(0,t)),i}convertPrayerTimingsToDateArray(e){const t=e.date.gregorian.date.split("-"),a=`${t[2]}-${t[1]}-${t[0]}`;return Object.entries(e.timings).map((([e,t])=>{const r=t.split(":");return{prayer:e,dateTime:new Date(`${a}T${r[0]}:${r[1]}:00`)}}))}addStatusToPrayerTimes(e){const t=new Date,a=new Date(new Date(t).setHours(0,0,0,0)),r=new Date(a.getTime()+864e5-1),i=e.findIndex((e=>e.dateTime>t));return e.map(((e,a)=>{let n="unknown",s=!1;return n=e.dateTime<t?"past":e.dateTime>t&&e.dateTime<=r?"today":"future",a===i&&(s=!0),{prayer:e.prayer,dateTime:e.dateTime,status:{state:n,next:s}}}))}}class d extends l{constructor(e){super(e)}createWidget(e,t){const a=this.getFilteredPrayerTimes(e,this.displayItems),r=this.addStatusToPrayerTimes(a),i=new Date,n="#FFFFFF",s=.8,o=new ListWidget;"accessoryCircular"!==this.widgetSize&&(o.setPadding(16,20,16,20),o.spacing=4);const c=o.addStack();switch(c.layoutVertically(),c.centerAlignContent(),c.spacing=4,r.forEach((e=>{const{prayer:t,dateTime:a}=e,r=this.calculateDaysDifference(i,a)+1,o=new Color(n,s/r),l=this.preferences.user.displayPrayerTimes.find((e=>e.name.toLowerCase()===t.toLowerCase()));if(!l)return;const{name:d,abbreviation:u}=l,h="medium"===this.widgetSize||"large"===this.widgetSize?d.toUpperCase():u;switch(this.widgetSize){case"small":case"medium":case"large":case"extraLarge":this.addTimeStackInWidget(c,h,e,4,o);break;case"accessoryCircular":this.addTimeStackInAccessoryCircular(c,h,e,o);break;case"accessoryInline":case"accessoryRectangular":this.addTimeStackInAccessoryInlineRectangle(c,h,e,o)}})),this.widgetSize){case"small":case"medium":case"large":case"extraLarge":{const e=o.addStack();e.layoutVertically();const a=this.addCenteredTextElementToStack(e,`${t} metres`);a.font=new Font("AvenirNext-Regular",10),a.textColor=new Color(n,s);const[r,c]=this.addCenteredDateElementToStack(e,i);r.font=new Font("AvenirNext-Regular",10),r.textColor=new Color(n,s),c.font=new Font("AvenirNext-Regular",10),c.textColor=new Color(n,s);break}}return o}addTimeStackInAccessoryInlineRectangle(e,t,a,r){const{dateTime:i,status:n}=a;let s,o=new Font("AvenirNext-Regular",12);n&&"future"===n.state&&(s=r),n&&n.next&&(o=new Font("AvenirNext-Bold",14));const c=e.addStack(),l=c.addText(t);l.font=o,l.lineLimit=1;const d=c.addDate(i);return d.font=o,d.lineLimit=1,d.applyTimeStyle(),s&&(l.textColor=s,d.textColor=s),c}addTimeStackInAccessoryCircular(e,t,a,r){const{dateTime:i,status:n}=a;let s,o=new Font("AvenirNext-Regular",12);n&&"future"===n.state&&(s=r),n&&n.next&&(o=new Font("AvenirNext-Bold",14));const c=e.addStack();c.layoutVertically();const l=c.addStack();l.addSpacer();const d=l.addText(t);d.font=o,d.lineLimit=1,l.addSpacer();const u=c.addStack();u.addSpacer();const h=u.addDate(i);return h.font=o,h.lineLimit=1,h.minimumScaleFactor=.5,h.applyTimeStyle(),u.addSpacer(),s&&(d.textColor=s,h.textColor=s),c}addTimeStackInWidget(e,t,a,r,i){const{dateTime:n,status:s}=a;let o,c=new Font("AvenirNext-Regular",12);s&&"future"===s.state&&(o=i),s&&s.next&&(c=new Font("AvenirNext-Bold",14));const l=e.addStack();l.spacing=r;const d=l.addText(t);d.font=c,d.lineLimit=1,l.addSpacer();const u=l.addDate(n);return u.font=c,u.lineLimit=1,u.applyTimeStyle(),o&&(d.textColor=o,u.textColor=o),l}addCenteredTextElementToStack(e,t){const a=e.addStack();a.addSpacer();const r=a.addText(t);return r.lineLimit=1,r.centerAlignText(),a.addSpacer(),r}addCenteredDateElementToStack(e,t){const a=e.addStack();a.addSpacer();const r=a.addDate(t);r.applyDateStyle(),r.lineLimit=1,r.centerAlignText(),a.spacing=2;const i=a.addDate(t);return i.applyTimeStyle(),i.lineLimit=1,i.centerAlignText(),a.addSpacer(),[r,i]}}class u extends d{constructor(e){super(e)}async initialise(e){this.preferences=await this.loadPreferences(),this.online=await this.isOnline(),Location.current().then((async t=>{this.preferences.data.location=t,await this.mergeAndSavePreferences({data:{location:t}}),Script.complete(),await e(this)}))}async setup(){if(this.preferences.data.prayerTimes){const e=this.getPrayerTimeForDay(this.preferences.data.prayerTimes),t=this.getFilteredPrayerTimes(this.preferences.data.prayerTimes).length;this.distanceFromOfflineData=this.calculateDistanceFromDeviceLocation(null==e?void 0:e.meta),(t<=this.displayItems||this.distanceFromOfflineData>this.preferences.user.distanceToleranceMetres)&&await this.fetchAndSavePrayerTimes(this.preferences.data.location)}if(!this.isOnline)return console.error("Script requires an internet connection to fetch prayer times for the first time."),Script.complete();await this.fetchAndSavePrayerTimes(this.preferences.data.location)}async displayWidget(){if(this.preferences.data.prayerTimes){const e=this.createWidget(this.preferences.data.prayerTimes,this.distanceFromOfflineData);config.runsInAccessoryWidget&&(e.addAccessoryWidgetBackground=!0,Script.setWidget(e)),await e.presentLarge()}}}(async()=>{await async function(){try{const e=new i,t=e.joinDocumentPaths([Script.name(),Script.name()],".json"),a=await e.readJSON(t),r=new u(a);await r.initialise((async e=>await e.setup())),await r.setup(),await r.displayWidget(),Script.complete()}catch(t){throw e(t)}}()})();
