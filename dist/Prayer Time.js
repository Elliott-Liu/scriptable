// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: deep-green; icon-glyph: mosque;
const t={widget:{settings:{file:"Prayer Time",directory:"Prayer Time",size:"small",offline:3},display:{prayerTimes:{fajr:{emoji:"🌄"},sunrise:{emoji:"🌅"},dhuhr:{emoji:"🏞"},asr:{emoji:"🏙"},maghrib:{emoji:"🌇"},isha:{emoji:"🌃"},sunset:{emoji:"🌅"}}}},api:{endpoint:"http://api.aladhan.com/v1/timings/",method:2,location:{latitude:38.70977051985349,longitude:-9.135920391030602}}};async function e(t){const e=new Request(t);return await e.loadJSON()}function n(t,e){const n=t.api,i=function(t){const e=t||new Date;return new Date(e).toLocaleString(void 0,{day:"2-digit",month:"2-digit",year:"numeric"}).replace(/\//g,"-")}(e);return`${n.endpoint}${i}?latitude=${n.location.latitude}&longitude=${n.location.longitude}&method=${n.method}`}function i(t){const[e,n,i]=t.split("-"),o=new Date(Number(i),Number(n)-1,Number(e));return o.setHours(0,0,0,0),o}function o(t){const e=`${t.widget.settings.file}.json`,n=t.widget.settings.directory,i=FileManager.iCloud(),o=i.joinPath(i.documentsDirectory(),n);return i.fileExists(o)||i.createDirectory(o),i.joinPath(o,e)}async function a(t){let e=FileManager.iCloud(),n=o(t);if(e.fileExists(n)){e.isFileDownloaded(n)||await e.downloadFileFromiCloud(n);const t=e.readString(n);return JSON.parse(t)}return[]}(async()=>{await async function(){if(await async function(){try{const t=15,e=new Request("https://www.google.com");e.method="HEAD",e.timeoutInterval=t/60;await e.load();return!0}catch(t){return!1}}()){const r=await async function(t){const i=t.widget.settings.offline,o=[];for(let a=0;a<i;a++){const i=new Date;i.setDate(i.getDate()+a);const r=n(t,i),s=(await e(r)).data;o.push(s)}return o}(t);await async function(t,e){const n=e,r=await a(t),s=[];(function(t){const e=[];return t.forEach((t=>{e.some((e=>JSON.stringify(e)===JSON.stringify(t)))||e.push(t)})),e})(r).filter((({date:{gregorian:{date:e}}})=>{const n=new Date;n.setHours(0,0,0,0);const o=new Date(n);o.setDate(n.getDate()+t.widget.settings.offline);const a=i(e)>=n,r=i(e)<=o;return a&&r})),n.forEach((t=>{if(!1===s.some((e=>JSON.stringify(e)===JSON.stringify(t)))){const e=s.findIndex((({date:{gregorian:{date:e}}})=>t.date.gregorian.date===e));e>=0&&(s[e]=t),-1===e&&s.push(t)}})),s.sort(((t,e)=>{const n=new Date(t.date.gregorian.date),i=new Date(e.date.gregorian.date);return n<i?-1:n>i?1:0})),function(t,e){let n=FileManager.iCloud(),i=o(t),a=JSON.stringify(e,null,2);n.writeString(i,a)}(t,s)}(t,r)}const r=await a(t);r&&function(t,e){const n=function(t,e){const n=t.filter((({date:{gregorian:{date:t}}})=>{const n=e||new Date;n.setHours(0,0,0,0);const o=i(t);return n.toDateString()===o.toDateString()}));if(n[0]){return n[0]}}(t);if(!n)return;const o=n.timings,a=Object.keys(e.widget.display.prayerTimes).map((t=>function(t){const e=t.charAt(0).toUpperCase(),n=t.slice(1).toLowerCase();return(e+n).trim()}(t)));for(const[t,e]of Object.entries(o)){a.includes(t)&&console.log(e)}}(r,t)}()})();
